Grades for version committed on time
	decoder: 17.6 / 20
			*Partially passed test: invalid (opcode = 20 funct = 20) (writeenable wrong)
				*Your output: alu_op = 000 rd_src = 1 alu_src2 = 00 writeenable = 1 except = 1
			*Passed test: add (opcode = 00 funct = 20)
			*Passed test: addi (opcode = 08 funct = 20)
			*Passed test: sub (opcode = 00 funct = 22)
			*Partially passed test: invalid (opcode = 22 funct = 22) (writeenable wrong)
				*Your output: alu_op = 000 rd_src = 1 alu_src2 = 00 writeenable = 1 except = 1
			*Passed test: and (opcode = 00 funct = 24)
			*Partially passed test: invalid (opcode = 24 funct = 24) (writeenable wrong)
				*Your output: alu_op = 000 rd_src = 1 alu_src2 = 00 writeenable = 1 except = 1
			*Passed test: andi (opcode = 0c funct = 24)
			*Passed test: or (opcode = 00 funct = 25)
			*Passed test: ori (opcode = 0d funct = 25)
			*Partially passed test: invalid (opcode = 25 funct = 25) (writeenable wrong)
				*Your output: alu_op = 000 rd_src = 1 alu_src2 = 00 writeenable = 1 except = 1
			*Passed test: nor (opcode = 00 funct = 27)
			*Partially passed test: invalid (opcode = 27 funct = 27) (writeenable wrong)
				*Your output: alu_op = 000 rd_src = 1 alu_src2 = 00 writeenable = 1 except = 1
			*Passed test: xor (opcode = 00 funct = 26)
			*Partially passed test: invalid (opcode = 26 funct = 26) (writeenable wrong)
				*Your output: alu_op = 000 rd_src = 1 alu_src2 = 00 writeenable = 1 except = 1
			*Passed test: xori (opcode = 0e funct = 26)
			*Passed test: addu (opcode = 00 funct = 21)
			*Passed test: addiu (opcode = 09 funct = 21)
		
Total: 17.6 / 20

Final Score: 17.6 / 20
